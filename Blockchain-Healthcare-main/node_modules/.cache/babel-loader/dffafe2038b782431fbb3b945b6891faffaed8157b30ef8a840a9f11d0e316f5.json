{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhanu\\\\Downloads\\\\Blockchain-Healthcare-main\\\\Blockchain-Healthcare-main\\\\src\\\\Healthcare.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Healthcare = () => {\n  _s();\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [isOwner, setIsOwner] = useState(false);\n\n  // Form state for adding a patient\n  const [patientID, setPatientID] = useState('');\n  const [patientName, setPatientName] = useState('');\n  const [mobileNumber, setMobileNumber] = useState('');\n  const [addressInfo, setAddressInfo] = useState('');\n\n  // Form state for adding a record\n  const [diagnosis, setDiagnosis] = useState('');\n  const [treatment, setTreatment] = useState('');\n  const [providerAddress, setProviderAddress] = useState('');\n  const [patientRecords, setPatientRecords] = useState([]);\n  const [patientDetails, setPatientDetails] = useState(null);\n  const contractAddress = '0x46E8e766Fa1773f90cc6e67F7195A32FF0B624Ec';\n  const contractABI = [{\n    inputs: [],\n    stateMutability: 'nonpayable',\n    type: 'constructor'\n  }, {\n    inputs: [{\n      internalType: 'address',\n      name: 'provider',\n      type: 'address'\n    }],\n    name: 'authorizeProvider',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  }, {\n    inputs: [{\n      internalType: 'uint256',\n      name: 'patientID',\n      type: 'uint256'\n    }, {\n      internalType: 'string',\n      name: 'name',\n      type: 'string'\n    }, {\n      internalType: 'string',\n      name: 'mobileNumber',\n      type: 'string'\n    }, {\n      internalType: 'string',\n      name: 'addressInfo',\n      type: 'string'\n    }],\n    name: 'addPatient',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  }, {\n    inputs: [{\n      internalType: 'uint256',\n      name: 'patientID',\n      type: 'uint256'\n    }],\n    name: 'getPatientDetails',\n    outputs: [{\n      components: [{\n        internalType: 'uint256',\n        name: 'patientID',\n        type: 'uint256'\n      }, {\n        internalType: 'string',\n        name: 'name',\n        type: 'string'\n      }, {\n        internalType: 'string',\n        name: 'mobileNumber',\n        type: 'string'\n      }, {\n        internalType: 'string',\n        name: 'addressInfo',\n        type: 'string'\n      }],\n      internalType: 'struct HealthcareRecords.Patient',\n      name: '',\n      type: 'tuple'\n    }],\n    stateMutability: 'view',\n    type: 'function'\n  }, {\n    inputs: [{\n      internalType: 'uint256',\n      name: 'patientID',\n      type: 'uint256'\n    }, {\n      internalType: 'string',\n      name: 'diagnosis',\n      type: 'string'\n    }, {\n      internalType: 'string',\n      name: 'treatment',\n      type: 'string'\n    }],\n    name: 'addRecord',\n    outputs: [],\n    stateMutability: 'nonpayable',\n    type: 'function'\n  }, {\n    inputs: [{\n      internalType: 'uint256',\n      name: 'patientID',\n      type: 'uint256'\n    }],\n    name: 'getPatientRecords',\n    outputs: [{\n      components: [{\n        internalType: 'uint256',\n        name: 'recordID',\n        type: 'uint256'\n      }, {\n        internalType: 'string',\n        name: 'diagnosis',\n        type: 'string'\n      }, {\n        internalType: 'string',\n        name: 'treatment',\n        type: 'string'\n      }, {\n        internalType: 'uint256',\n        name: 'timestamp',\n        type: 'uint256'\n      }],\n      internalType: 'struct HealthcareRecords.Record[]',\n      name: '',\n      type: 'tuple[]'\n    }],\n    stateMutability: 'view',\n    type: 'function'\n  }];\n  useEffect(() => {\n    const connectWallet = async () => {\n      try {\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        await provider.send('eth_requestAccounts', []);\n        const signer = provider.getSigner();\n        setProvider(provider);\n        setSigner(signer);\n        const accountAddress = await signer.getAddress();\n        setAccount(accountAddress);\n        const contract = new ethers.Contract(contractAddress, contractABI, signer);\n        setContract(contract);\n        const ownerAddress = await contract.getOwner();\n        setIsOwner(accountAddress.toLowerCase() === ownerAddress.toLowerCase());\n      } catch (error) {\n        console.error('Error connecting to wallet:', error);\n      }\n    };\n    connectWallet();\n  }, []);\n  const addPatient = async () => {\n    try {\n      const tx = await contract.addPatient(patientID, patientName, mobileNumber, addressInfo);\n      await tx.wait();\n      alert('Patient added successfully!');\n    } catch (error) {\n      console.error('Error adding patient:', error);\n    }\n  };\n  const fetchPatientDetails = async () => {\n    try {\n      const details = await contract.getPatientDetails(patientID);\n      setPatientDetails(details);\n      fetchPatientRecords();\n    } catch (error) {\n      console.error('Error fetching patient details:', error);\n    }\n  };\n  const fetchPatientRecords = async () => {\n    try {\n      const records = await contract.getPatientRecords(patientID);\n      setPatientRecords(records);\n    } catch (error) {\n      console.error('Error fetching patient records:', error);\n    }\n  };\n  const addRecord = async () => {\n    try {\n      const tx = await contract.addRecord(patientID, diagnosis, treatment);\n      await tx.wait();\n      fetchPatientRecords();\n      alert('Record added successfully!');\n    } catch (error) {\n      console.error('Error adding record:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Healthcare Application\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), account && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Connected Account: \", account]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 19\n    }, this), isOwner && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"You are the contract owner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add Patient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Patient ID\",\n        value: patientID,\n        onChange: e => setPatientID(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Name\",\n        value: patientName,\n        onChange: e => setPatientName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Mobile Number\",\n        value: mobileNumber,\n        onChange: e => setMobileNumber(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Address\",\n        value: addressInfo,\n        onChange: e => setAddressInfo(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addPatient,\n        children: \"Add Patient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Fetch Patient Details and Records\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Patient ID\",\n        value: patientID,\n        onChange: e => setPatientID(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchPatientDetails,\n        children: \"Fetch Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), patientDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", patientDetails.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Mobile: \", patientDetails.mobileNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Address: \", patientDetails.addressInfo]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Records:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), patientRecords.map((record, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Diagnosis: \", record.diagnosis]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Treatment: \", record.treatment]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Timestamp: \", new Date(record.timestamp.toNumber() * 1000).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add Record\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Diagnosis\",\n        value: diagnosis,\n        onChange: e => setDiagnosis(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Treatment\",\n        value: treatment,\n        onChange: e => setTreatment(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addRecord,\n        children: \"Add Record\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n};\n_s(Healthcare, \"c909lntj3nSQ/82q9T18AK+oPO4=\");\n_c = Healthcare;\nexport default Healthcare;\nvar _c;\n$RefreshReg$(_c, \"Healthcare\");","map":{"version":3,"names":["React","useState","useEffect","ethers","jsxDEV","_jsxDEV","Healthcare","_s","provider","setProvider","signer","setSigner","contract","setContract","account","setAccount","isOwner","setIsOwner","patientID","setPatientID","patientName","setPatientName","mobileNumber","setMobileNumber","addressInfo","setAddressInfo","diagnosis","setDiagnosis","treatment","setTreatment","providerAddress","setProviderAddress","patientRecords","setPatientRecords","patientDetails","setPatientDetails","contractAddress","contractABI","inputs","stateMutability","type","internalType","name","outputs","components","connectWallet","providers","Web3Provider","window","ethereum","send","getSigner","accountAddress","getAddress","Contract","ownerAddress","getOwner","toLowerCase","error","console","addPatient","tx","wait","alert","fetchPatientDetails","details","getPatientDetails","fetchPatientRecords","records","getPatientRecords","addRecord","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","onClick","map","record","index","Date","timestamp","toNumber","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/bhanu/Downloads/Blockchain-Healthcare-main/Blockchain-Healthcare-main/src/Healthcare.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { ethers } from 'ethers';\r\n\r\nconst Healthcare = () => {\r\n  const [provider, setProvider] = useState(null);\r\n  const [signer, setSigner] = useState(null);\r\n  const [contract, setContract] = useState(null);\r\n  const [account, setAccount] = useState(null);\r\n  const [isOwner, setIsOwner] = useState(false);\r\n\r\n  // Form state for adding a patient\r\n  const [patientID, setPatientID] = useState('');\r\n  const [patientName, setPatientName] = useState('');\r\n  const [mobileNumber, setMobileNumber] = useState('');\r\n  const [addressInfo, setAddressInfo] = useState('');\r\n\r\n  // Form state for adding a record\r\n  const [diagnosis, setDiagnosis] = useState('');\r\n  const [treatment, setTreatment] = useState('');\r\n\r\n  const [providerAddress, setProviderAddress] = useState('');\r\n  const [patientRecords, setPatientRecords] = useState([]);\r\n  const [patientDetails, setPatientDetails] = useState(null);\r\n\r\n  const contractAddress = '0x46E8e766Fa1773f90cc6e67F7195A32FF0B624Ec';\r\n  const contractABI = [\r\n    {\r\n      inputs: [],\r\n      stateMutability: 'nonpayable',\r\n      type: 'constructor',\r\n    },\r\n    {\r\n      inputs: [{ internalType: 'address', name: 'provider', type: 'address' }],\r\n      name: 'authorizeProvider',\r\n      outputs: [],\r\n      stateMutability: 'nonpayable',\r\n      type: 'function',\r\n    },\r\n    {\r\n      inputs: [\r\n        { internalType: 'uint256', name: 'patientID', type: 'uint256' },\r\n        { internalType: 'string', name: 'name', type: 'string' },\r\n        { internalType: 'string', name: 'mobileNumber', type: 'string' },\r\n        { internalType: 'string', name: 'addressInfo', type: 'string' },\r\n      ],\r\n      name: 'addPatient',\r\n      outputs: [],\r\n      stateMutability: 'nonpayable',\r\n      type: 'function',\r\n    },\r\n    {\r\n      inputs: [{ internalType: 'uint256', name: 'patientID', type: 'uint256' }],\r\n      name: 'getPatientDetails',\r\n      outputs: [\r\n        {\r\n          components: [\r\n            { internalType: 'uint256', name: 'patientID', type: 'uint256' },\r\n            { internalType: 'string', name: 'name', type: 'string' },\r\n            { internalType: 'string', name: 'mobileNumber', type: 'string' },\r\n            { internalType: 'string', name: 'addressInfo', type: 'string' },\r\n          ],\r\n          internalType: 'struct HealthcareRecords.Patient',\r\n          name: '',\r\n          type: 'tuple',\r\n        },\r\n      ],\r\n      stateMutability: 'view',\r\n      type: 'function',\r\n    },\r\n    {\r\n      inputs: [\r\n        { internalType: 'uint256', name: 'patientID', type: 'uint256' },\r\n        { internalType: 'string', name: 'diagnosis', type: 'string' },\r\n        { internalType: 'string', name: 'treatment', type: 'string' },\r\n      ],\r\n      name: 'addRecord',\r\n      outputs: [],\r\n      stateMutability: 'nonpayable',\r\n      type: 'function',\r\n    },\r\n    {\r\n      inputs: [{ internalType: 'uint256', name: 'patientID', type: 'uint256' }],\r\n      name: 'getPatientRecords',\r\n      outputs: [\r\n        {\r\n          components: [\r\n            { internalType: 'uint256', name: 'recordID', type: 'uint256' },\r\n            { internalType: 'string', name: 'diagnosis', type: 'string' },\r\n            { internalType: 'string', name: 'treatment', type: 'string' },\r\n            { internalType: 'uint256', name: 'timestamp', type: 'uint256' },\r\n          ],\r\n          internalType: 'struct HealthcareRecords.Record[]',\r\n          name: '',\r\n          type: 'tuple[]',\r\n        },\r\n      ],\r\n      stateMutability: 'view',\r\n      type: 'function',\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const connectWallet = async () => {\r\n      try {\r\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n        await provider.send('eth_requestAccounts', []);\r\n        const signer = provider.getSigner();\r\n        setProvider(provider);\r\n        setSigner(signer);\r\n\r\n        const accountAddress = await signer.getAddress();\r\n        setAccount(accountAddress);\r\n\r\n        const contract = new ethers.Contract(contractAddress, contractABI, signer);\r\n        setContract(contract);\r\n\r\n        const ownerAddress = await contract.getOwner();\r\n        setIsOwner(accountAddress.toLowerCase() === ownerAddress.toLowerCase());\r\n      } catch (error) {\r\n        console.error('Error connecting to wallet:', error);\r\n      }\r\n    };\r\n    connectWallet();\r\n  }, []);\r\n\r\n  const addPatient = async () => {\r\n    try {\r\n      const tx = await contract.addPatient(patientID, patientName, mobileNumber, addressInfo);\r\n      await tx.wait();\r\n      alert('Patient added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding patient:', error);\r\n    }\r\n  };\r\n\r\n  const fetchPatientDetails = async () => {\r\n    try {\r\n      const details = await contract.getPatientDetails(patientID);\r\n      setPatientDetails(details);\r\n      fetchPatientRecords();\r\n    } catch (error) {\r\n      console.error('Error fetching patient details:', error);\r\n    }\r\n  };\r\n\r\n  const fetchPatientRecords = async () => {\r\n    try {\r\n      const records = await contract.getPatientRecords(patientID);\r\n      setPatientRecords(records);\r\n    } catch (error) {\r\n      console.error('Error fetching patient records:', error);\r\n    }\r\n  };\r\n\r\n  const addRecord = async () => {\r\n    try {\r\n      const tx = await contract.addRecord(patientID, diagnosis, treatment);\r\n      await tx.wait();\r\n      fetchPatientRecords();\r\n      alert('Record added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding record:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Healthcare Application</h1>\r\n      {account && <p>Connected Account: {account}</p>}\r\n      {isOwner && <p>You are the contract owner</p>}\r\n\r\n      <div>\r\n        <h2>Add Patient</h2>\r\n        <input placeholder=\"Patient ID\" value={patientID} onChange={(e) => setPatientID(e.target.value)} />\r\n        <input placeholder=\"Name\" value={patientName} onChange={(e) => setPatientName(e.target.value)} />\r\n        <input placeholder=\"Mobile Number\" value={mobileNumber} onChange={(e) => setMobileNumber(e.target.value)} />\r\n        <input placeholder=\"Address\" value={addressInfo} onChange={(e) => setAddressInfo(e.target.value)} />\r\n        <button onClick={addPatient}>Add Patient</button>\r\n      </div>\r\n\r\n      <div>\r\n        <h2>Fetch Patient Details and Records</h2>\r\n        <input placeholder=\"Patient ID\" value={patientID} onChange={(e) => setPatientID(e.target.value)} />\r\n        <button onClick={fetchPatientDetails}>Fetch Details</button>\r\n        {patientDetails && (\r\n          <div>\r\n            <p>Name: {patientDetails.name}</p>\r\n            <p>Mobile: {patientDetails.mobileNumber}</p>\r\n            <p>Address: {patientDetails.addressInfo}</p>\r\n          </div>\r\n        )}\r\n        <h3>Records:</h3>\r\n        {patientRecords.map((record, index) => (\r\n          <div key={index}>\r\n            <p>Diagnosis: {record.diagnosis}</p>\r\n            <p>Treatment: {record.treatment}</p>\r\n            <p>Timestamp: {new Date(record.timestamp.toNumber() * 1000).toLocaleString()}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div>\r\n        <h2>Add Record</h2>\r\n        <input placeholder=\"Diagnosis\" value={diagnosis} onChange={(e) => setDiagnosis(e.target.value)} />\r\n        <input placeholder=\"Treatment\" value={treatment} onChange={(e) => setTreatment(e.target.value)} />\r\n        <button onClick={addRecord}>Add Record</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Healthcare;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;;EAE7C;EACA,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACmB,WAAW,EAAEC,cAAc,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACqB,YAAY,EAAEC,eAAe,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACuB,WAAW,EAAEC,cAAc,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;;EAElD;EACA,MAAM,CAACyB,SAAS,EAAEC,YAAY,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAAC2B,SAAS,EAAEC,YAAY,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAM,CAAC6B,eAAe,EAAEC,kBAAkB,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAAC+B,cAAc,EAAEC,iBAAiB,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACiC,cAAc,EAAEC,iBAAiB,CAAC,GAAGlC,QAAQ,CAAC,IAAI,CAAC;EAE1D,MAAMmC,eAAe,GAAG,4CAA4C;EACpE,MAAMC,WAAW,GAAG,CAClB;IACEC,MAAM,EAAE,EAAE;IACVC,eAAe,EAAE,YAAY;IAC7BC,IAAI,EAAE;EACR,CAAC,EACD;IACEF,MAAM,EAAE,CAAC;MAAEG,YAAY,EAAE,SAAS;MAAEC,IAAI,EAAE,UAAU;MAAEF,IAAI,EAAE;IAAU,CAAC,CAAC;IACxEE,IAAI,EAAE,mBAAmB;IACzBC,OAAO,EAAE,EAAE;IACXJ,eAAe,EAAE,YAAY;IAC7BC,IAAI,EAAE;EACR,CAAC,EACD;IACEF,MAAM,EAAE,CACN;MAAEG,YAAY,EAAE,SAAS;MAAEC,IAAI,EAAE,WAAW;MAAEF,IAAI,EAAE;IAAU,CAAC,EAC/D;MAAEC,YAAY,EAAE,QAAQ;MAAEC,IAAI,EAAE,MAAM;MAAEF,IAAI,EAAE;IAAS,CAAC,EACxD;MAAEC,YAAY,EAAE,QAAQ;MAAEC,IAAI,EAAE,cAAc;MAAEF,IAAI,EAAE;IAAS,CAAC,EAChE;MAAEC,YAAY,EAAE,QAAQ;MAAEC,IAAI,EAAE,aAAa;MAAEF,IAAI,EAAE;IAAS,CAAC,CAChE;IACDE,IAAI,EAAE,YAAY;IAClBC,OAAO,EAAE,EAAE;IACXJ,eAAe,EAAE,YAAY;IAC7BC,IAAI,EAAE;EACR,CAAC,EACD;IACEF,MAAM,EAAE,CAAC;MAAEG,YAAY,EAAE,SAAS;MAAEC,IAAI,EAAE,WAAW;MAAEF,IAAI,EAAE;IAAU,CAAC,CAAC;IACzEE,IAAI,EAAE,mBAAmB;IACzBC,OAAO,EAAE,CACP;MACEC,UAAU,EAAE,CACV;QAAEH,YAAY,EAAE,SAAS;QAAEC,IAAI,EAAE,WAAW;QAAEF,IAAI,EAAE;MAAU,CAAC,EAC/D;QAAEC,YAAY,EAAE,QAAQ;QAAEC,IAAI,EAAE,MAAM;QAAEF,IAAI,EAAE;MAAS,CAAC,EACxD;QAAEC,YAAY,EAAE,QAAQ;QAAEC,IAAI,EAAE,cAAc;QAAEF,IAAI,EAAE;MAAS,CAAC,EAChE;QAAEC,YAAY,EAAE,QAAQ;QAAEC,IAAI,EAAE,aAAa;QAAEF,IAAI,EAAE;MAAS,CAAC,CAChE;MACDC,YAAY,EAAE,kCAAkC;MAChDC,IAAI,EAAE,EAAE;MACRF,IAAI,EAAE;IACR,CAAC,CACF;IACDD,eAAe,EAAE,MAAM;IACvBC,IAAI,EAAE;EACR,CAAC,EACD;IACEF,MAAM,EAAE,CACN;MAAEG,YAAY,EAAE,SAAS;MAAEC,IAAI,EAAE,WAAW;MAAEF,IAAI,EAAE;IAAU,CAAC,EAC/D;MAAEC,YAAY,EAAE,QAAQ;MAAEC,IAAI,EAAE,WAAW;MAAEF,IAAI,EAAE;IAAS,CAAC,EAC7D;MAAEC,YAAY,EAAE,QAAQ;MAAEC,IAAI,EAAE,WAAW;MAAEF,IAAI,EAAE;IAAS,CAAC,CAC9D;IACDE,IAAI,EAAE,WAAW;IACjBC,OAAO,EAAE,EAAE;IACXJ,eAAe,EAAE,YAAY;IAC7BC,IAAI,EAAE;EACR,CAAC,EACD;IACEF,MAAM,EAAE,CAAC;MAAEG,YAAY,EAAE,SAAS;MAAEC,IAAI,EAAE,WAAW;MAAEF,IAAI,EAAE;IAAU,CAAC,CAAC;IACzEE,IAAI,EAAE,mBAAmB;IACzBC,OAAO,EAAE,CACP;MACEC,UAAU,EAAE,CACV;QAAEH,YAAY,EAAE,SAAS;QAAEC,IAAI,EAAE,UAAU;QAAEF,IAAI,EAAE;MAAU,CAAC,EAC9D;QAAEC,YAAY,EAAE,QAAQ;QAAEC,IAAI,EAAE,WAAW;QAAEF,IAAI,EAAE;MAAS,CAAC,EAC7D;QAAEC,YAAY,EAAE,QAAQ;QAAEC,IAAI,EAAE,WAAW;QAAEF,IAAI,EAAE;MAAS,CAAC,EAC7D;QAAEC,YAAY,EAAE,SAAS;QAAEC,IAAI,EAAE,WAAW;QAAEF,IAAI,EAAE;MAAU,CAAC,CAChE;MACDC,YAAY,EAAE,mCAAmC;MACjDC,IAAI,EAAE,EAAE;MACRF,IAAI,EAAE;IACR,CAAC,CACF;IACDD,eAAe,EAAE,MAAM;IACvBC,IAAI,EAAE;EACR,CAAC,CACF;EAEDtC,SAAS,CAAC,MAAM;IACd,MAAM2C,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMrC,QAAQ,GAAG,IAAIL,MAAM,CAAC2C,SAAS,CAACC,YAAY,CAACC,MAAM,CAACC,QAAQ,CAAC;QACnE,MAAMzC,QAAQ,CAAC0C,IAAI,CAAC,qBAAqB,EAAE,EAAE,CAAC;QAC9C,MAAMxC,MAAM,GAAGF,QAAQ,CAAC2C,SAAS,CAAC,CAAC;QACnC1C,WAAW,CAACD,QAAQ,CAAC;QACrBG,SAAS,CAACD,MAAM,CAAC;QAEjB,MAAM0C,cAAc,GAAG,MAAM1C,MAAM,CAAC2C,UAAU,CAAC,CAAC;QAChDtC,UAAU,CAACqC,cAAc,CAAC;QAE1B,MAAMxC,QAAQ,GAAG,IAAIT,MAAM,CAACmD,QAAQ,CAAClB,eAAe,EAAEC,WAAW,EAAE3B,MAAM,CAAC;QAC1EG,WAAW,CAACD,QAAQ,CAAC;QAErB,MAAM2C,YAAY,GAAG,MAAM3C,QAAQ,CAAC4C,QAAQ,CAAC,CAAC;QAC9CvC,UAAU,CAACmC,cAAc,CAACK,WAAW,CAAC,CAAC,KAAKF,YAAY,CAACE,WAAW,CAAC,CAAC,CAAC;MACzE,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC;IACDb,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMe,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,EAAE,GAAG,MAAMjD,QAAQ,CAACgD,UAAU,CAAC1C,SAAS,EAAEE,WAAW,EAAEE,YAAY,EAAEE,WAAW,CAAC;MACvF,MAAMqC,EAAE,CAACC,IAAI,CAAC,CAAC;MACfC,KAAK,CAAC,6BAA6B,CAAC;IACtC,CAAC,CAAC,OAAOL,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,MAAMM,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,IAAI;MACF,MAAMC,OAAO,GAAG,MAAMrD,QAAQ,CAACsD,iBAAiB,CAAChD,SAAS,CAAC;MAC3DiB,iBAAiB,CAAC8B,OAAO,CAAC;MAC1BE,mBAAmB,CAAC,CAAC;IACvB,CAAC,CAAC,OAAOT,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACzD;EACF,CAAC;EAED,MAAMS,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,IAAI;MACF,MAAMC,OAAO,GAAG,MAAMxD,QAAQ,CAACyD,iBAAiB,CAACnD,SAAS,CAAC;MAC3De,iBAAiB,CAACmC,OAAO,CAAC;IAC5B,CAAC,CAAC,OAAOV,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACzD;EACF,CAAC;EAED,MAAMY,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMT,EAAE,GAAG,MAAMjD,QAAQ,CAAC0D,SAAS,CAACpD,SAAS,EAAEQ,SAAS,EAAEE,SAAS,CAAC;MACpE,MAAMiC,EAAE,CAACC,IAAI,CAAC,CAAC;MACfK,mBAAmB,CAAC,CAAC;MACrBJ,KAAK,CAAC,4BAA4B,CAAC;IACrC,CAAC,CAAC,OAAOL,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,oBACErD,OAAA;IAAKkE,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBnE,OAAA;MAAAmE,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC9B9D,OAAO,iBAAIT,OAAA;MAAAmE,QAAA,GAAG,qBAAmB,EAAC1D,OAAO;IAAA;MAAA2D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC9C5D,OAAO,iBAAIX,OAAA;MAAAmE,QAAA,EAAG;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAE7CvE,OAAA;MAAAmE,QAAA,gBACEnE,OAAA;QAAAmE,QAAA,EAAI;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpBvE,OAAA;QAAOwE,WAAW,EAAC,YAAY;QAACC,KAAK,EAAE5D,SAAU;QAAC6D,QAAQ,EAAGC,CAAC,IAAK7D,YAAY,CAAC6D,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnGvE,OAAA;QAAOwE,WAAW,EAAC,MAAM;QAACC,KAAK,EAAE1D,WAAY;QAAC2D,QAAQ,EAAGC,CAAC,IAAK3D,cAAc,CAAC2D,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjGvE,OAAA;QAAOwE,WAAW,EAAC,eAAe;QAACC,KAAK,EAAExD,YAAa;QAACyD,QAAQ,EAAGC,CAAC,IAAKzD,eAAe,CAACyD,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC5GvE,OAAA;QAAOwE,WAAW,EAAC,SAAS;QAACC,KAAK,EAAEtD,WAAY;QAACuD,QAAQ,EAAGC,CAAC,IAAKvD,cAAc,CAACuD,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpGvE,OAAA;QAAQ6E,OAAO,EAAEtB,UAAW;QAAAY,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eAENvE,OAAA;MAAAmE,QAAA,gBACEnE,OAAA;QAAAmE,QAAA,EAAI;MAAiC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1CvE,OAAA;QAAOwE,WAAW,EAAC,YAAY;QAACC,KAAK,EAAE5D,SAAU;QAAC6D,QAAQ,EAAGC,CAAC,IAAK7D,YAAY,CAAC6D,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnGvE,OAAA;QAAQ6E,OAAO,EAAElB,mBAAoB;QAAAQ,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAC3D1C,cAAc,iBACb7B,OAAA;QAAAmE,QAAA,gBACEnE,OAAA;UAAAmE,QAAA,GAAG,QAAM,EAACtC,cAAc,CAACQ,IAAI;QAAA;UAAA+B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClCvE,OAAA;UAAAmE,QAAA,GAAG,UAAQ,EAACtC,cAAc,CAACZ,YAAY;QAAA;UAAAmD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC5CvE,OAAA;UAAAmE,QAAA,GAAG,WAAS,EAACtC,cAAc,CAACV,WAAW;QAAA;UAAAiD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CACN,eACDvE,OAAA;QAAAmE,QAAA,EAAI;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAChB5C,cAAc,CAACmD,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBAChChF,OAAA;QAAAmE,QAAA,gBACEnE,OAAA;UAAAmE,QAAA,GAAG,aAAW,EAACY,MAAM,CAAC1D,SAAS;QAAA;UAAA+C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpCvE,OAAA;UAAAmE,QAAA,GAAG,aAAW,EAACY,MAAM,CAACxD,SAAS;QAAA;UAAA6C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpCvE,OAAA;UAAAmE,QAAA,GAAG,aAAW,EAAC,IAAIc,IAAI,CAACF,MAAM,CAACG,SAAS,CAACC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,CAACC,cAAc,CAAC,CAAC;QAAA;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAHzES,KAAK;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIV,CACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAENvE,OAAA;MAAAmE,QAAA,gBACEnE,OAAA;QAAAmE,QAAA,EAAI;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnBvE,OAAA;QAAOwE,WAAW,EAAC,WAAW;QAACC,KAAK,EAAEpD,SAAU;QAACqD,QAAQ,EAAGC,CAAC,IAAKrD,YAAY,CAACqD,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClGvE,OAAA;QAAOwE,WAAW,EAAC,WAAW;QAACC,KAAK,EAAElD,SAAU;QAACmD,QAAQ,EAAGC,CAAC,IAAKnD,YAAY,CAACmD,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClGvE,OAAA;QAAQ6E,OAAO,EAAEZ,SAAU;QAAAE,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACrE,EAAA,CA9MID,UAAU;AAAAoF,EAAA,GAAVpF,UAAU;AAgNhB,eAAeA,UAAU;AAAC,IAAAoF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}