{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhanu\\\\Downloads\\\\Blockchain-Healthcare-main\\\\Blockchain-Healthcare-main\\\\src\\\\Healthcare.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Healthcare = () => {\n  _s();\n  const [provider, setProvider] = useState(null);\n  const [signer, setSigner] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [isOwner, setIsOwner] = useState(false);\n\n  // Form state for adding a patient\n  const [patientID, setPatientID] = useState('');\n  const [patientName, setPatientName] = useState('');\n  const [mobileNumber, setMobileNumber] = useState('');\n  const [addressInfo, setAddressInfo] = useState('');\n\n  // Form state for adding a record\n  const [diagnosis, setDiagnosis] = useState('');\n  const [treatment, setTreatment] = useState('');\n  const [providerAddress, setProviderAddress] = useState('');\n  const [patientRecords, setPatientRecords] = useState([]);\n  const [patientDetails, setPatientDetails] = useState(null);\n  const contractAddress = '0xd53816c260520FD2f9fF3217d6210c7735A27DBe';\n  const contractABI = [{\n    \"inputs\": [{\n      \"internalType\": \"uint256\",\n      \"name\": \"patientID\",\n      \"type\": \"uint256\"\n    }, {\n      \"internalType\": \"string\",\n      \"name\": \"name\",\n      \"type\": \"string\"\n    }, {\n      \"internalType\": \"string\",\n      \"name\": \"mobileNumber\",\n      \"type\": \"string\"\n    }, {\n      \"internalType\": \"string\",\n      \"name\": \"addressInfo\",\n      \"type\": \"string\"\n    }],\n    \"name\": \"addPatient\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [{\n      \"internalType\": \"uint256\",\n      \"name\": \"patientID\",\n      \"type\": \"uint256\"\n    }, {\n      \"internalType\": \"string\",\n      \"name\": \"diagnosis\",\n      \"type\": \"string\"\n    }, {\n      \"internalType\": \"string\",\n      \"name\": \"treatment\",\n      \"type\": \"string\"\n    }],\n    \"name\": \"addRecord\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [{\n      \"internalType\": \"address\",\n      \"name\": \"provider\",\n      \"type\": \"address\"\n    }],\n    \"name\": \"authorizeProvider\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  }, {\n    \"inputs\": [],\n    \"name\": \"getOwner\",\n    \"outputs\": [{\n      \"internalType\": \"address\",\n      \"name\": \"\",\n      \"type\": \"address\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [{\n      \"internalType\": \"uint256\",\n      \"name\": \"patientID\",\n      \"type\": \"uint256\"\n    }],\n    \"name\": \"getPatientDetails\",\n    \"outputs\": [{\n      \"components\": [{\n        \"internalType\": \"uint256\",\n        \"name\": \"patientID\",\n        \"type\": \"uint256\"\n      }, {\n        \"internalType\": \"string\",\n        \"name\": \"name\",\n        \"type\": \"string\"\n      }, {\n        \"internalType\": \"string\",\n        \"name\": \"mobileNumber\",\n        \"type\": \"string\"\n      }, {\n        \"internalType\": \"string\",\n        \"name\": \"addressInfo\",\n        \"type\": \"string\"\n      }],\n      \"internalType\": \"struct HealthcareRecords.Patient\",\n      \"name\": \"\",\n      \"type\": \"tuple\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [{\n      \"internalType\": \"uint256\",\n      \"name\": \"patientID\",\n      \"type\": \"uint256\"\n    }],\n    \"name\": \"getPatientRecords\",\n    \"outputs\": [{\n      \"components\": [{\n        \"internalType\": \"uint256\",\n        \"name\": \"recordID\",\n        \"type\": \"uint256\"\n      }, {\n        \"internalType\": \"string\",\n        \"name\": \"diagnosis\",\n        \"type\": \"string\"\n      }, {\n        \"internalType\": \"string\",\n        \"name\": \"treatment\",\n        \"type\": \"string\"\n      }, {\n        \"internalType\": \"uint256\",\n        \"name\": \"timestamp\",\n        \"type\": \"uint256\"\n      }],\n      \"internalType\": \"struct HealthcareRecords.Record[]\",\n      \"name\": \"\",\n      \"type\": \"tuple[]\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }];\n  useEffect(() => {\n    const connectWallet = async () => {\n      try {\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        await provider.send('eth_requestAccounts', []);\n        const signer = provider.getSigner();\n        setProvider(provider);\n        setSigner(signer);\n        const accountAddress = await signer.getAddress();\n        setAccount(accountAddress);\n        const contract = new ethers.Contract(contractAddress, contractABI, signer);\n        setContract(contract);\n        const ownerAddress = await contract.getOwner();\n        setIsOwner(accountAddress.toLowerCase() === ownerAddress.toLowerCase());\n      } catch (error) {\n        console.error('Error connecting to wallet:', error);\n      }\n    };\n    connectWallet();\n  }, []);\n  const addPatient = async () => {\n    try {\n      const tx = await contract.addPatient(patientID, patientName, mobileNumber, addressInfo);\n      await tx.wait();\n      alert('Patient added successfully!');\n    } catch (error) {\n      console.error('Error adding patient:', error);\n    }\n  };\n  const fetchPatientDetails = async () => {\n    try {\n      const details = await contract.getPatientDetails(patientID);\n      setPatientDetails(details);\n      fetchPatientRecords();\n    } catch (error) {\n      console.error('Error fetching patient details:', error);\n    }\n  };\n  const fetchPatientRecords = async () => {\n    try {\n      const records = await contract.getPatientRecords(patientID);\n      setPatientRecords(records);\n    } catch (error) {\n      console.error('Error fetching patient records:', error);\n    }\n  };\n  const addRecord = async () => {\n    try {\n      const tx = await contract.addRecord(patientID, diagnosis, treatment);\n      await tx.wait();\n      fetchPatientRecords();\n      alert('Record added successfully!');\n    } catch (error) {\n      console.error('Error adding record:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Healthcare Application\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this), account && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Connected Account: \", account]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 19\n    }, this), isOwner && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"You are the contract owner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add Patient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Patient ID\",\n        value: patientID,\n        onChange: e => setPatientID(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Name\",\n        value: patientName,\n        onChange: e => setPatientName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Mobile Number\",\n        value: mobileNumber,\n        onChange: e => setMobileNumber(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Address\",\n        value: addressInfo,\n        onChange: e => setAddressInfo(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addPatient,\n        children: \"Add Patient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Fetch Patient Details and Records\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Patient ID\",\n        value: patientID,\n        onChange: e => setPatientID(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchPatientDetails,\n        children: \"Fetch Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), patientDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", patientDetails.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Mobile: \", patientDetails.mobileNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Address: \", patientDetails.addressInfo]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Records:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), patientRecords.map((record, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Diagnosis: \", record.diagnosis]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Treatment: \", record.treatment]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Timestamp: \", new Date(record.timestamp.toNumber() * 1000).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add Record\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Diagnosis\",\n        value: diagnosis,\n        onChange: e => setDiagnosis(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Treatment\",\n        value: treatment,\n        onChange: e => setTreatment(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addRecord,\n        children: \"Add Record\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 258,\n    columnNumber: 5\n  }, this);\n};\n_s(Healthcare, \"c909lntj3nSQ/82q9T18AK+oPO4=\");\n_c = Healthcare;\nexport default Healthcare;\nvar _c;\n$RefreshReg$(_c, \"Healthcare\");","map":{"version":3,"names":["React","useState","useEffect","ethers","jsxDEV","_jsxDEV","Healthcare","_s","provider","setProvider","signer","setSigner","contract","setContract","account","setAccount","isOwner","setIsOwner","patientID","setPatientID","patientName","setPatientName","mobileNumber","setMobileNumber","addressInfo","setAddressInfo","diagnosis","setDiagnosis","treatment","setTreatment","providerAddress","setProviderAddress","patientRecords","setPatientRecords","patientDetails","setPatientDetails","contractAddress","contractABI","connectWallet","providers","Web3Provider","window","ethereum","send","getSigner","accountAddress","getAddress","Contract","ownerAddress","getOwner","toLowerCase","error","console","addPatient","tx","wait","alert","fetchPatientDetails","details","getPatientDetails","fetchPatientRecords","records","getPatientRecords","addRecord","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","onClick","name","map","record","index","Date","timestamp","toNumber","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/bhanu/Downloads/Blockchain-Healthcare-main/Blockchain-Healthcare-main/src/Healthcare.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { ethers } from 'ethers';\r\n\r\nconst Healthcare = () => {\r\n  const [provider, setProvider] = useState(null);\r\n  const [signer, setSigner] = useState(null);\r\n  const [contract, setContract] = useState(null);\r\n  const [account, setAccount] = useState(null);\r\n  const [isOwner, setIsOwner] = useState(false);\r\n\r\n  // Form state for adding a patient\r\n  const [patientID, setPatientID] = useState('');\r\n  const [patientName, setPatientName] = useState('');\r\n  const [mobileNumber, setMobileNumber] = useState('');\r\n  const [addressInfo, setAddressInfo] = useState('');\r\n\r\n  // Form state for adding a record\r\n  const [diagnosis, setDiagnosis] = useState('');\r\n  const [treatment, setTreatment] = useState('');\r\n\r\n  const [providerAddress, setProviderAddress] = useState('');\r\n  const [patientRecords, setPatientRecords] = useState([]);\r\n  const [patientDetails, setPatientDetails] = useState(null);\r\n\r\n  const contractAddress = '0xd53816c260520FD2f9fF3217d6210c7735A27DBe';\r\n  const contractABI = [\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"patientID\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"name\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"mobileNumber\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"addressInfo\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"addPatient\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"patientID\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"diagnosis\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"treatment\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"addRecord\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"provider\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"authorizeProvider\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"constructor\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"getOwner\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"patientID\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"getPatientDetails\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"components\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\t\t\"name\": \"patientID\",\r\n\t\t\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\t\t\"name\": \"name\",\r\n\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\t\t\"name\": \"mobileNumber\",\r\n\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\t\t\"name\": \"addressInfo\",\r\n\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t\t\"internalType\": \"struct HealthcareRecords.Patient\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"tuple\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"patientID\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"getPatientRecords\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"components\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\t\t\"name\": \"recordID\",\r\n\t\t\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\t\t\"name\": \"diagnosis\",\r\n\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\t\t\"name\": \"treatment\",\r\n\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\t\t\"name\": \"timestamp\",\r\n\t\t\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t\t\"internalType\": \"struct HealthcareRecords.Record[]\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"tuple[]\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t}\r\n]\r\n\r\n  useEffect(() => {\r\n    const connectWallet = async () => {\r\n      try {\r\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n        await provider.send('eth_requestAccounts', []);\r\n        const signer = provider.getSigner();\r\n        setProvider(provider);\r\n        setSigner(signer);\r\n\r\n        const accountAddress = await signer.getAddress();\r\n        setAccount(accountAddress);\r\n\r\n        const contract = new ethers.Contract(contractAddress, contractABI, signer);\r\n        setContract(contract);\r\n\r\n        const ownerAddress = await contract.getOwner();\r\n        setIsOwner(accountAddress.toLowerCase() === ownerAddress.toLowerCase());\r\n      } catch (error) {\r\n        console.error('Error connecting to wallet:', error);\r\n      }\r\n    };\r\n    connectWallet();\r\n  }, []);\r\n\r\n  const addPatient = async () => {\r\n    try {\r\n      const tx = await contract.addPatient(patientID, patientName, mobileNumber, addressInfo);\r\n      await tx.wait();\r\n      alert('Patient added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding patient:', error);\r\n    }\r\n  };\r\n\r\n  const fetchPatientDetails = async () => {\r\n    try {\r\n      const details = await contract.getPatientDetails(patientID);\r\n      setPatientDetails(details);\r\n      fetchPatientRecords();\r\n    } catch (error) {\r\n      console.error('Error fetching patient details:', error);\r\n    }\r\n  };\r\n\r\n  const fetchPatientRecords = async () => {\r\n    try {\r\n      const records = await contract.getPatientRecords(patientID);\r\n      setPatientRecords(records);\r\n    } catch (error) {\r\n      console.error('Error fetching patient records:', error);\r\n    }\r\n  };\r\n\r\n  const addRecord = async () => {\r\n    try {\r\n      const tx = await contract.addRecord(patientID, diagnosis, treatment);\r\n      await tx.wait();\r\n      fetchPatientRecords();\r\n      alert('Record added successfully!');\r\n    } catch (error) {\r\n      console.error('Error adding record:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Healthcare Application</h1>\r\n      {account && <p>Connected Account: {account}</p>}\r\n      {isOwner && <p>You are the contract owner</p>}\r\n\r\n      <div>\r\n        <h2>Add Patient</h2>\r\n        <input placeholder=\"Patient ID\" value={patientID} onChange={(e) => setPatientID(e.target.value)} />\r\n        <input placeholder=\"Name\" value={patientName} onChange={(e) => setPatientName(e.target.value)} />\r\n        <input placeholder=\"Mobile Number\" value={mobileNumber} onChange={(e) => setMobileNumber(e.target.value)} />\r\n        <input placeholder=\"Address\" value={addressInfo} onChange={(e) => setAddressInfo(e.target.value)} />\r\n        <button onClick={addPatient}>Add Patient</button>\r\n      </div>\r\n\r\n      <div>\r\n        <h2>Fetch Patient Details and Records</h2>\r\n        <input placeholder=\"Patient ID\" value={patientID} onChange={(e) => setPatientID(e.target.value)} />\r\n        <button onClick={fetchPatientDetails}>Fetch Details</button>\r\n        {patientDetails && (\r\n          <div>\r\n            <p>Name: {patientDetails.name}</p>\r\n            <p>Mobile: {patientDetails.mobileNumber}</p>\r\n            <p>Address: {patientDetails.addressInfo}</p>\r\n          </div>\r\n        )}\r\n        <h3>Records:</h3>\r\n        {patientRecords.map((record, index) => (\r\n          <div key={index}>\r\n            <p>Diagnosis: {record.diagnosis}</p>\r\n            <p>Treatment: {record.treatment}</p>\r\n            <p>Timestamp: {new Date(record.timestamp.toNumber() * 1000).toLocaleString()}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div>\r\n        <h2>Add Record</h2>\r\n        <input placeholder=\"Diagnosis\" value={diagnosis} onChange={(e) => setDiagnosis(e.target.value)} />\r\n        <input placeholder=\"Treatment\" value={treatment} onChange={(e) => setTreatment(e.target.value)} />\r\n        <button onClick={addRecord}>Add Record</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Healthcare;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}